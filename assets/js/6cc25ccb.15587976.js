"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7948],{6803:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>n,metadata:()=>i,toc:()=>p});var o=s(7462),a=(s(7294),s(3905));const n={},r="Development",i={unversionedId:"develop/index",id:"develop/index",title:"Development",description:"Typewriter has different parts that can be developed upon. The easiest one are adapters. These are self-containted building blocks that can easaly be shared and added to the system.",source:"@site/docs/develop/index.mdx",sourceDirName:"develop",slug:"/develop/",permalink:"/TypeWriter/develop/",draft:!1,editUrl:"https://github.com/gabber235/TypeWriter/tree/main/documentation/docs/develop/index.mdx",tags:[],version:"current",frontMatter:{},sidebar:"develop"},d={},p=[],l={toc:p},c="wrapper";function h(e){let{components:t,...s}=e;return(0,a.kt)(c,(0,o.Z)({},l,s,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"development"},"Development"),(0,a.kt)("p",null,"Typewriter has different parts that can be developed upon. The easiest one are adapters. These are self-containted building blocks that can easaly be shared and added to the system.\nThen there are the plugin systems. These are core parts of how Typewriter works. All help is welcome, but please discuss it first as there changes might impact a lot of users.\nLastly there is the UI. This is written in Flutter and is the most complex part of Typewriter. It is also the most fun to work on, as this is where you can really see the results of your work."),(0,a.kt)("admonition",{title:"important",type:"danger"},(0,a.kt)("p",{parentName:"admonition"},"This part of the documentation is still under construction. If you want to help, please contact us on ",(0,a.kt)("a",{parentName:"p",href:"https://discord.gg/HtbKyuDDBw"},"Discord"),".")))}h.isMDXComponent=!0}}]);